esphome:
  name: "air-monitor"
  friendly_name: "Air Monitor"
  platformio_options:
    board_build.flash_mode: dio
    board_build.cpu: esp32c3

esp32:
  board: esp32-c3-devkitm-1
  # Ref https://wiki.seeedstudio.com/xiao-esp32c3-esphome
  variant: esp32c3
  framework:
    type: esp-idf

logger:
  hardware_uart: USB_SERIAL_JTAG
  level: DEBUG

api:
  encryption:
    key: "<REDACTED>"
  services:
    - service: start_fan_autoclean
      then:
        - sen5x.start_fan_autoclean: sen55

ota:
  password: "<REDACTED>"

# Ref https://github.com/esphome/esphome/pull/3500#issuecomment-1441399027
external_components:
  - source: github://pr#3500
    components:
      - web_server
      - web_server_idf
      - web_server_base
      - captive_portal

web_server:
  port: 80
  auth:
    username: admin
    password: !secret web_auth_password
  local: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "Air Monitor AP"
    password: !secret ap_password

captive_portal:

i2c:
  # Ref https://files.seeedstudio.com/wiki/XIAO_WiFi/pin_map-2.png
  sda: GPIO6
  scl: GPIO7

sensor:
  # Ref https://esphome.io/components/sensor/sen5x.html
  - platform: sen5x
    id: sen55
    pm_1_0:
      name: PM < 1.0µg/m³
      accuracy_decimals: 1
      id: pm_1_0
    pm_2_5:
      name: PM < 2.5µg/m³
      accuracy_decimals: 1
    pm_4_0:
      name: PM < 4.0µg/m³
      accuracy_decimals: 1
    pm_10_0:
      name: PM < 10.0µg/m³
      accuracy_decimals: 1
    temperature:
      name: Temperature
      accuracy_decimals: 1
    humidity:
      name: Humidity
      accuracy_decimals: 0
    voc:
      name: Volatile Organic Compounds
    nox:
      name: Nitrogen oxides
  # Ref https://esphome.io/components/sensor/uptime.html
  - platform: uptime
    id: uptime_seconds
  # Ref https://esphome.io/components/sensor/wifi_signal.html
  - platform: wifi_signal
    name: "WiFi Signal"

binary_sensor:
  # Ref https://esphome.io/components/binary_sensor/status.html
  - platform: status
    id: node_status

text_sensor:
  - platform: template
    name: Node Status
    lambda: |-
      return id(node_status).state ? std::string("Connected") : std::string("Not connected");
    icon: mdi:check-network-outline
    entity_category: diagnostic
  - platform: template
    name: Uptime
    lambda: |-
      int seconds = id(uptime_seconds).state;
      int days = seconds / 86400;
      seconds %= 86400;
      int hours = seconds / 3600;
      seconds %= 3600;
      int minutes = seconds /  60;
      seconds %= 60;
      return std::to_string(days) + "d " + std::to_string(hours) + "h " + std::to_string(minutes) + "m " + std::to_string(seconds) + "s";
    icon: mdi:timer-outline
    update_interval: 60s
    entity_category: diagnostic
  - platform: version
    name: "Version"
